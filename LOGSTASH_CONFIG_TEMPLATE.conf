
input {
  file {
    path => "INPUT_FILE_PATH"
    type => "INPUT_LOG_TYPE"
  }
}

filter {
  if [type] == "INPUT_LOG_TYPE" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:INPUT_LOG_TYPE_timestamp} %{SYSLOGHOST:INPUT_LOG_TYPE_hostname} %{DATA:INPUT_LOG_TYPE_program}(?:\[%{POSINT:INPUT_LOG_TYPE_pid}\])?: %{GREEDYDATA:INPUT_LOG_TYPE_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    INPUT_LOG_TYPE_pri { }
    date {
      match => [ "INPUT_LOG_TYPE_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}


output {

#   stdout { debug => true codec => "rubydebug"}

#    if "_grokparsefailure" not in [tags] {

    webhdfs {

        server => "OUTPUT_HDFS_SERVER:OUTPUT_HDFS_PORT"

        user => "OUTPUT_HDFS_USER"

#      compress => "snappy"

        path => "/OUTPUT_ENV/OUTPUT_APPNAME/log_date=%{+Y}-%{+M}-%{+d}/HOSTNAME_OUTPUT_APPNAME.log"

        flush_size => 2

        idle_flush_time => 1

        #retry_interval => 0.5
        retry_interval => 1

#           }

    }

}
